{
	"openapi": "3.1.0",
	"info": {
		"title": "nri_scheduler",
    "version": "0.1.0",
    "description": "my outstanding trpg scheduler"
	},
	"paths": {
		"/api/registration": {
			"post": {
				"tags": [
					"profile"
				],
				"summary": "Регистрация нового пользователя",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegistrationDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/signin": {
			"post": {
				"tags": [
					"profile"
				],
				"summary": "Авторизация",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignInDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/logout": {
			"post": {
				"tags": [
					"profile"
				],
				"summary": "Окончание сессии",
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/profile/my": {
			"get": {
				"tags": [
					"profile"
				],
				"summary": "Получение профиля авторизованного пользователя",
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseProfile"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			},
			"put": {
				"tags": [
					"profile"
				],
				"summary": "Обновление информации о пользователе",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateProfileDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/profile/{id}": {
			"get": {
				"tags": [
					"profile"
				],
				"summary": "Получение профиля пользователя по его идентификатору",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор пользователя",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseProfile"
								}
							}
						}
					}
				},
				"security": [
					{},
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/profile/avatar/{id}": {
			"get": {
				"tags": [
					"profile"
				],
				"summary": "Получение аватара пользователя",
				"deprecated": true,
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор пользователя",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Файл аватара",
						"content": {
							"image/*": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"404": {
						"description": "Файл не найден",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "Ошибка получения файла",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/avatar/{id}": {
			"get": {
				"tags": [
					"profile"
				],
				"summary": "Получение аватара пользователя",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор пользователя",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Файл аватара",
						"content": {
							"image/*": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"404": {
						"description": "Файл не найден",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "Ошибка получения файла",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/cover/{id}": {
			"get": {
				"tags": [
					"companies"
				],
				"summary": "Получение обложки кампании",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор кампании",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Файл обложки кампании",
						"content": {
							"image/*": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"404": {
						"description": "Файл не найден",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "Ошибка получения файла",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/profile/avatar": {
			"put": {
				"tags": [
					"profile"
				],
				"summary": "Передача ссылки на файл аватара",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "Данные для установки авара",
								"required": [
									"url"
								],
								"properties": {
									"url": {
										"type": "string",
										"format": "uri",
										"description": "Ссылка на файл аватара"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/events": {
			"get": {
				"tags": [
					"events"
				],
				"summary": "Получение списка событий",
				"parameters": [
					{
						"name": "date_from",
						"in": "query",
						"description": "Начало периода для поиска событий",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time",
							"example": "2025-02-01T12:00:00+03:00"
						}
					},
					{
						"name": "date_to",
						"in": "query",
						"description": "Конец периода для поиска событий",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time",
							"example": "2025-12-31T12:00:00+03:00"
						}
					},
					{
						"name": "master",
						"in": "query",
						"description": "Идентификатор мастера, проводящего игру",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "location",
						"in": "query",
						"description": "Идентификатор локации, на которой проводится игра",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"name": "applied",
						"in": "query",
						"description": "Признак, подавал ли пользоватьель заявку на игру",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "not_rejected",
						"in": "query",
						"description": "Признак, что заявку пользователя не отклонили",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "imamaster",
						"in": "query",
						"description": "Признак, что пользователь является мастером на игре",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithEventsList"
								}
							}
						}
					}
				},
				"security": [
					{},
					{
						"cookieAuth": []
					}
				]
			},
			"post": {
				"tags": [
					"events"
				],
				"summary": "Создание нового события",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewEventDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithUuid"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/events/{id}": {
			"get": {
				"tags": [
					"events"
				],
				"summary": "Получение события по идентификатору",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор события",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithEvent"
								}
							}
						}
					}
				},
				"security": [
					{},
					{
						"cookieAuth": []
					}
				]
			},
			"put": {
				"tags": [
					"events"
				],
				"summary": "Обновление информации о событии",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор события",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateEventDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/events/apply/{id}": {
			"post": {
				"tags": [
					"events"
				],
				"summary": "Подача заявки на участие в игре",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор события",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithUuid"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/locations": {
			"get": {
				"tags": [
					"locations"
				],
				"summary": "Получение списка локаций",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"description": "Фильтр названия локации",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithLocationsList"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"locations"
				],
				"summary": "Создание локации",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewLocationDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithUuid"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/locations/{id}": {
			"get": {
				"tags": [
					"locations"
				],
				"summary": "Получение локации по идентификатору",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор локации",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithLocation"
								}
							}
						}
					}
				}
			}
		},
		"/api/companies": {
			"post": {
				"tags": [
					"companies"
				],
				"summary": "Создание кампании",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ApiCompanyDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithUuid"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/companies/{id}": {
			"get": {
				"tags": [
					"companies"
				],
				"summary": "Получение кампании по идентификатору",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор кампании",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithCompanyInfo"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"companies"
				],
				"summary": "Обновление информации о кампании",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор кампании",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ApiUpdateCompanyDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/companies/{id}/cover": {
			"put": {
				"tags": [
					"companies"
				],
				"summary": "Передача ссылки на файл обложки кампании",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Идентификатор кампании",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "Данные для установки обложки кампании",
								"required": [
									"url"
								],
								"properties": {
									"url": {
										"type": "string",
										"format": "uri",
										"description": "Ссылка на файл обложки кампании"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		},
		"/api/companies/my": {
			"get": {
				"tags": [
					"companies"
				],
				"summary": "Получение списка кампаний которые ведёт пользователь",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"description": "Фильтр названия кампании",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Результат выполнения запроса",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppResponseWithCompanyList"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": []
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"EScenarioStatus": {
				"type": "integer",
				"enum": [0, 1, 2, 3, 4],
				"description": "RPC статус результата",
				"x-enum-descriptions": [
					"Успех",
					"Ошибка авторизации",
					"Ошибка бизнес логики",
					"Ошибка приложения",
					"Сессия истекла"
				],
				"x-enum-varnames": [
					"SCENARIO_SUCCESS",
					"UNAUTHORIZED",
					"SCENARIO_FAIL",
					"SYSTEM_ERROR",
					"SESSION_EXPIRED"
				]
			},
			"RegistrationDto": {
				"type": "object",
				"description": "Данные для регистрации пользователя",
				"required": [
					"nickname",
					"email",
					"password"
				],
				"properties": {
					"nickname": {
						"type": "string",
						"description": "Имя пользователя"
					},
					"email": {
						"type": "string",
						"format": "email",
						"description": "Электронная почта пользователя"
					},
					"password": {
						"type": "string",
						"format": "password",
						"description": "Пароль пользователя"
					},
					"timezone_offset": {
						"type": "integer",
						"nullable": true,
						"description": "Смещение временной зоны пользователя"
					}
				}
			},
			"SignInDto": {
				"type": "object",
				"description": "Данные для авторизации",
				"required": [
					"email",
					"password"
				],
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"description": "Электронная почта пользователя"
					},
					"password": {
						"type": "string",
						"format": "password",
						"description": "Пароль пользователя"
					}
				}
			},
			"Event": {
				"type": "object",
				"description": "Событие (игра)",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор события"
					},
					"company": {
						"type": "string",
						"description": "Название кампании"
					},
					"company_id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор кампании"
					},
					"master": {
						"type": "string",
						"description": "Имя мастера"
					},
					"master_id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор мастера"
					},
					"location": {
						"type": "string",
						"description": "Место проведения"
					},
					"location_id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор места проведения"
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"description": "Дата и время проведения игры в формате UTC"
					},
					"players": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": "Список имён игроков, подавших заявку"
					},
					"max_slots": {
						"type": "integer",
						"nullable": true,
						"description": "Максимальное количество игроков"
					},
					"plan_duration": {
						"type": "integer",
						"nullable": true,
						"description": "Планируемая продолжительность игры в часах"
					},
					"you_applied": {
						"type": "boolean",
						"description": "Подал ли уже пользователь заявку на данную игру"
					},
					"you_are_master": {
						"type": "boolean",
						"description": "Является ли пользователь мастером на игре"
					},
					"your_approval": {
						"type": "boolean",
						"nullable": true,
						"description": "Одобрил ли мастер заявку пользователя на участие"
					}
				}
			},
			"NewEventDto": {
				"type": "object",
				"description": "Данные для создания события",
				"required": [
					"company",
					"date"
				],
				"properties": {
					"company": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор кампании"
					},
					"location": {
						"type": "string",
						"format": "uuid",
						"nullable": true,
						"description": "Идентификатор места проведения"
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"example": "2025-02-28T17:00:00+03:00",
						"description": "Дата и время проведения игры"
					},
					"max_slots": {
						"type": "integer",
						"nullable": true,
						"description": "Максимальное количество игроков"
					},
					"plan_duration": {
						"type": "integer",
						"nullable": true,
						"description": "Планируемая продолжительность игры в часах"
					}
				}
			},
			"UpdateEventDto": {
				"type": "object",
				"description": "Данные для обновления события",
				"required": [
					"location",
					"date",
					"max_slots",
					"plan_duration"
				],
				"properties": {
					"location": {
						"type": "string",
						"format": "uuid",
						"nullable": true,
						"description": "Идентификатор места проведения"
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"example": "2025-02-28T17:00:00+03:00",
						"description": "Дата и время проведения игры"
					},
					"max_slots": {
						"type": "integer",
						"nullable": true,
						"description": "Максимальное количество игроков"
					},
					"plan_duration": {
						"type": "integer",
						"nullable": true,
						"description": "Планируемая продолжительность игры в часах"
					}
				}
			},
			"Location": {
				"type": "object",
				"description": "Место проведения игр",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор локации"
					},
					"name": {
						"type": "string",
						"description": "Название локации"
					},
					"address": {
						"type": "string",
						"nullable": true,
						"description": "Адрес локации"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Описание локации"
					}
				}
			},
			"NewLocationDto": {
				"type": "object",
				"description": "Данные для создания локации",
				"required": [
					"name"
				],
				"properties": {
					"name": {
						"type": "string",
						"description": "Название локации"
					},
					"address": {
						"type": "string",
						"nullable": true,
						"description": "Адрес локации"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Описание локации"
					}
				}
			},
			"ApiCompanyDto": {
				"type": "object",
				"description": "Данные для создания кампании",
				"required": [
					"name",
					"system"
				],
				"properties": {
					"name": {
						"type": "string",
						"description": "Название кампании"
					},
					"system": {
						"type": "string",
						"description": "Система правил"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Описание локации"
					},
					"cover_link": {
						"type": "string",
						"format": "uri-reference",
						"nullable": true,
						"description": "Ссылка на обложку"
					}
				}
			},
			"ApiUpdateCompanyDto": {
				"type": "object",
				"description": "Данные для создания кампании",
				"required": [
					"name",
					"system"
				],
				"properties": {
					"name": {
						"type": "string",
						"description": "Название кампании"
					},
					"system": {
						"type": "string",
						"description": "Система правил"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Описание локации"
					}
				}
			},
			"Company": {
				"type": "object",
				"description": "Описание кампании",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор кампании"
					},
					"master": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор мастера кампании"
					},
					"name": {
						"type": "string",
						"description": "Название кампании"
					},
					"system": {
						"type": "string",
						"description": "Система правил"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Описание локации"
					},
					"cover_link": {
						"type": "string",
						"format": "uri-reference",
						"example": "/cover/1f0010e2-2ad8-6960-b794-1694f0da179f",
						"nullable": true,
						"description": "Ссылка на обложку"
					}
				}
			},
			"CompanyInfo": {
				"type": "object",
				"description": "Описание кампании",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор кампании"
					},
					"master": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор мастера кампании"
					},
					"master_name": {
						"type": "string",
						"description": "Имя мастера кампании"
					},
					"name": {
						"type": "string",
						"description": "Название кампании"
					},
					"system": {
						"type": "string",
						"description": "Система правил"
					},
					"description": {
						"type": "string",
						"nullable": true,
						"description": "Описание локации"
					},
					"cover_link": {
						"type": "string",
						"format": "uri-reference",
						"example": "/cover/1f0010e2-2ad8-6960-b794-1694f0da179f",
						"nullable": true,
						"description": "Ссылка на обложку"
					},
					"you_are_master": {
						"type": "boolean",
						"description": "Является ли пользователь мастером кампании"
					}
				}
			},
			"AppResponse": {
				"type": "object",
				"description": "Ответ приложения без дополнительной информации",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"type": "null",
						"description": "Дополнительные данные"
					}
				}
			},
			"AppResponseWithUuid": {
				"type": "object",
				"description": "Ответ приложения с идентификатором созданной сущности",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор созданной сущности"
					}
				}
			},
			"SelfInfo": {
				"type": "object",
				"description": "Минимальная информация о пользователе",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор пользователя"
					},
					"timezone_offset": {
						"type": "integer",
						"nullable": true,
						"description": "Временная зона пользователя"
					},
					"get_tz_from_device": {
						"type": "boolean",
						"description": "Указание брать ли временную зону с устройства"
					}
				}
			},
			"AppResponseWhoIAm": {
				"type": "object",
				"description": "Ответ приложения с идентификатором созданной сущности",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"$ref": "#/components/schemas/SelfInfo"
					}
				}
			},
			"Profile": {
				"type": "object",
				"description": "Минимальная информация о пользователе",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid",
						"description": "Идентификатор пользователя"
					},
					"nickname": {
						"type": "string",
						"description": "Имя пользователя"
					},
					"email": {
						"type": "string",
						"format": "email",
						"nullable": true,
						"description": "Электронная почта пользователя"
					},
					"about_me": {
						"type": "string",
						"nullable": true,
						"description": "Информация о себе"
					},
					"avatar_link": {
						"type": "string",
						"format": "uri-reference",
						"example": "/avatar/1f0010e2-2ad8-6960-b794-1694f0da179f",
						"nullable": true,
						"description": "Ссылка на аватар"
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "Город пользователя"
					},
					"timezone_offset": {
						"type": "integer",
						"nullable": true,
						"description": "Временная зона пользователя"
					},
					"tz_variant": {
						"type": "string",
						"enum": ["city", "device", "own"],
						"nullable": true,
						"description": "Указание брать ли временную зону с устройства"
					},
					"get_tz_from_device": {
						"type": "boolean",
						"description": "Указание брать ли временную зону с устройства"
					}
				}
			},
			"UpdateProfileDto": {
				"type": "object",
				"description": "Информация для обновления данных пользователя",
				"properties": {
					"nickname": {
						"type": "string",
						"description": "Имя пользователя"
					},
					"about_me": {
						"type": "string",
						"nullable": true,
						"description": "Информация о себе"
					},
					"city": {
						"type": "string",
						"nullable": true,
						"description": "Город пользователя"
					}
				}
			},
			"AppResponseProfile": {
				"type": "object",
				"description": "Ответ приложения с идентификатором созданной сущности",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"$ref": "#/components/schemas/Profile"
					}
				}
			},
			"AppResponseWithEventsList": {
				"type": "object",
				"description": "Ответ приложения со списком событий",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Event"
						}
					}
				}
			},
			"AppResponseWithEvent": {
				"type": "object",
				"description": "Ответ приложения с информацией о событии",
				"required": [
					"status",
					"result",
					"payload"
				],
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"$ref": "#/components/schemas/Event"
					}
				}
			},
			"AppResponseWithLocationsList": {
				"type": "object",
				"description": "Ответ приложения со списком локаций",
				"required": [
					"status",
					"result",
					"payload"
				],
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Location"
						}
					}
				}
			},
			"AppResponseWithLocation": {
				"type": "object",
				"description": "Ответ приложения с информацией о локации",
				"required": [
					"status",
					"result",
					"payload"
				],
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"$ref": "#/components/schemas/Location"
					}
				}
			},
			"AppResponseWithCompanyList": {
				"type": "object",
				"description": "Ответ приложения со списком кампаний",
				"required": [
					"status",
					"result",
					"payload"
				],
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Company"
						}
					}
				}
			},
			"AppResponseWithCompanyInfo": {
				"type": "object",
				"description": "Ответ приложения с информацией о кампании",
				"required": [
					"status",
					"result",
					"payload"
				],
				"properties": {
					"status": {
						"$ref": "#/components/schemas/EScenarioStatus"
					},
					"result": {
						"type": "string",
						"description": "Текстовое описание результата"
					},
					"payload": {
						"$ref": "#/components/schemas/CompanyInfo"
					}
				}
			}
		},
		"securitySchemes": {
			"cookieAuth": {
				"type": "apiKey",
				"in": "cookie",
				"name": "authorization"
			}
		}
	},
	"tags": [
		{
			"name": "profile",
			"description": "Работа с персональными данными пользователя"
		},
		{
			"name": "events",
			"description": "Просмотр предстоящих событий (игр)"
		},
		{
			"name": "locations",
			"description": "Места проведения игр"
		},
		{
			"name": "companies",
			"description": "Кампании"
		}
	]
}
